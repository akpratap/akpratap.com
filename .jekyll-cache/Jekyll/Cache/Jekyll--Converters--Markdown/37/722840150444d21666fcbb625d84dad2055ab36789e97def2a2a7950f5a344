I"8<p>One thing I’ve learned over the years is that being clever with your code is a waste of time and energy.  The simpler, the better.  Part of being “simpler”, to me, falls into the paradigm of “clean code”.  But - what does “clean code” actually mean?  In this post, we’ll look at what I consider to be a “clean(er)” conditional statement that reduces cognitive complexity/overhead.</p>

<p>For example, consider a “simple” authorization check (contrived, of course):</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="n">_authorizationService</span><span class="p">.</span><span class="nf">HasClaim</span><span class="p">(</span><span class="n">Claims</span><span class="p">.</span><span class="n">Admin</span><span class="p">)</span> <span class="p">||</span> <span class="p">(</span><span class="n">_authorizationService</span><span class="p">.</span><span class="nf">HasClaim</span><span class="p">(</span><span class="n">Claims</span><span class="p">.</span><span class="n">User</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">_authorizationService</span><span class="p">.</span><span class="nf">HasClaim</span><span class="p">(</span><span class="n">Claims</span><span class="p">.</span><span class="n">ModifyTimesheet</span><span class="p">))){</span>
    <span class="c1">// do something</span>
<span class="p">}</span>
</code></pre></div></div>

<p>That <code class="language-plaintext highlighter-rouge">if</code> statement is getting kinda hairy, huh?  Take into consideration new folks joining your team trying to make heads or tails of that, too.</p>

<p>Yes, within a few seconds we gleam that if your an Admin or a User that also has the ModifyTimesheet permission, you should be allowed to <code class="language-plaintext highlighter-rouge">//do something</code>, but what if we just gave those “things” actual names?</p>

<p>Consider this refactor:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">bool</span> <span class="n">isAdmin</span> <span class="p">=</span> <span class="n">_authorizationService</span><span class="p">.</span><span class="nf">HasClaim</span><span class="p">(</span><span class="n">Claims</span><span class="p">.</span><span class="n">Admin</span><span class="p">);</span>
<span class="kt">bool</span> <span class="n">userHasPermission</span> <span class="p">=</span> <span class="n">_authorizationService</span><span class="p">.</span><span class="nf">HasClaim</span><span class="p">(</span><span class="n">Claims</span><span class="p">.</span><span class="n">User</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">_authorizationService</span><span class="p">.</span><span class="nf">HasClaim</span><span class="p">(</span><span class="n">Claims</span><span class="p">.</span><span class="n">ModifyTimesheet</span><span class="p">);</span>

<span class="k">if</span><span class="p">(</span><span class="n">isAdmin</span> <span class="p">||</span> <span class="n">userHasPermission</span><span class="p">){</span>
    <span class="c1">// do something</span>
<span class="p">}</span>
</code></pre></div></div>

<p>You can see we’ve introduced a couple of variables with very explicit names that we’ve swapped into the <code class="language-plaintext highlighter-rouge">if</code> statement.  Now when you scan that code and come across that <code class="language-plaintext highlighter-rouge">if</code> statement, you don’t have to read into the logic to understand the condition that needs met.  If you <em>do care</em> about what those two things are, then you can easily scan up to the variable declarations and “dig in” a little more.</p>

<p>Happy clean coding, dear reader!</p>

<hr />

<blockquote>
  <p>This post, “Clean Coding in C# - Part I”, first appeared on <a href="https://www.codingwithcalvin.net/clean-coding-in-c-part-i">https://www.codingwithcalvin.net/clean-coding-in-c-part-i</a></p>
</blockquote>

:ET